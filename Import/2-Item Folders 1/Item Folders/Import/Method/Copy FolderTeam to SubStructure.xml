<AML>
 <Item type="Method" id="6B9B49B64E6B488CAE4C30ED1F91CA10" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA['MethodTemplateName=VBMain;
Dim inn As Innovator = Me.getInnovator()
Dim res As Item
'
' called on ItemType: Fodler Item
' Server Events: onAfterUpdate
'
' on every update of a Folder item its entire structure if sub folder will inherit
' this folder's team_id
'
' If you do not want this type of inheritance, you can also call this method from an action
' to trigger this a manually.
'
Function Main() As Item
  'System.Diagnostics.Debugger.Break()
  Dim thisItemType As String = Me.GetType()
  Dim thisItemId As String = Me.GetID()

  Dim thisItemTeamId As String = Me.getProperty("team_id","")
  
  res = copyTeamIdToSubFolders (thisItemType, thisItemId)
  If res.isError() Then Return res

  Return Me
End Function  

'-----------------------------
Private Function copyTeamIdToSubFolders (folderType As String, parentFolderId As String) As Item
  Dim thisSubFolderRel As Item = Me.newItem("Item Sub Folder","get")
  thisSubFolderRel.setProperty("source_id",parentFolderId)
  thisSubFolderRel.setAttribute("select","team_id,source_id(team_id,config_id,name),related_id(team_id,config_id,keyed_name,allow_team_change_logic)")
  thisSubFolderRel.setAttribute("serverEvents","0")
  thisSubFolderRel = thisSubFolderRel.apply()

  If thisSubFolderRel.getItemCount() = 0 Then Return Me 'nothing to do
  If thisSubFolderRel.isError() Then Return thisSubFolderRel

  Dim parentFolderTeamId As String = thisSubFolderRel.getItemByIndex(0).getPropertyItem("source_id").getProperty("team_id","")
  Dim i As Integer
  For i=0 To thisSubFolderRel.getItemCount()-1
  	Dim thisRelItem As Item = thisSubFolderRel.getItemByIndex(i)
    Dim relItemId As String = thisRelItem.getProperty("related_id","")
  	Dim relShipTeamId As String = thisRelItem.getProperty("team_id","")

    If  (relItemId <> "") Then
      Dim relItemTeamId As String = thisRelItem.getPropertyItem("related_id").getProperty("team_id","empty")
      Dim relItemType As String = thisRelItem.getPropertyItem("related_id").getAttribute("type","")
      Dim relItemAllowTeamChange As Boolean = (thisRelItem.getPropertyItem("related_id").getProperty("allow_team_change_logic","0") = "1")

      ' also set team id on the relionship item (since this is not controlled by 'SrcAcess' core logic
      If parentFolderTeamId <> relShipTeamId Then
        res = updateTeamIdOnItem(thisRelItem.GetType(),thisRelItem.getID(),parentFolderTeamId)
        If res.isError() Then Return res
      End If
      ' set team id on the related item
      If relItemAllowTeamChange And parentFolderTeamId <> relItemTeamId Then
        res = updateTeamIdOnItem(relItemType,relItemId,parentFolderTeamId)
        If res.isError() Then Return res
      End If
  
      ' recursion
      res = copyTeamIdToSubFolders (folderType, relItemId)
      If res.isError() Then Return res

    End If
  
  Next i
  Return Me
End Function  

'-----------------------------
Private Function updateTeamIdOnItem (relItemType As String, relItemId As String, newTeamId As String) As Item
  Dim typeTable As String = relItemType.Replace(" " ,"_")
  
  'link teamId to project space
  If newTeamId <> "" Then  
    Dim SQLstr As String = "UPDATE [" & typeTable & "]"
    SQLstr = SQLstr & " SET [" & typeTable & "].team_id='" & newTeamId & "'"
    SQLstr = SQLstr & " WHERE [" & typeTable & "].id='" & relItemId & "'"
    res = inn.applySQL(SQLstr)
    Return res
  End If
  Return Me
End Function
]]></method_code>
  <method_type>VB</method_type>
  <name>Copy FolderTeam to SubStructure</name>
 </Item>
</AML>