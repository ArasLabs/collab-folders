<AML>
 <Item type="Method" id="96DE761643CE48A88AC2581E82C97EC4" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA['MethodTemplateName=VBMain;
Dim inn As Innovator = Me.getInnovator()
Dim res As Item
Dim ItemTypeWithAutoNumbers As String = ""
'
' called on ItemType: Folder Item
' Server Events: onAfterAdd
'
' check if new folder is a template (is_template flag = "1")
' if yes, make sure the folder template permission set is used !
'
' check if new folder has property "item_folder_template_id" set and it is not a template folder.
' if set, clone the structure of sub folders from this template
' Merge some properties from the 'top' folder of the template to this 'top' item folder
'
' Merge relationships from template folders with defined rules
'  For Rel: "Item Folder File" (Attachments) -> copy all files
'  For Rel: "Item Folder Controlled Item" -> read prop template_action
'           template_action = 'Reference" -> copy related_id (re-use same item)
'           template_action = 'New Item" -> create a new controlled item of same type
'
Function Main() As Item
  'System.Diagnostics.Debugger.Break()
  Dim thisItemType As String = Me.GetType()
  Dim thisItemId As String = Me.GetID()

  Dim qry As Item = inn.newItem(thisItemType,"get")
  qry.setID(thisItemId)
  qry.setAttribute("serverEvents","0")
  qry.setAttribute("select","name,description,item_number,state,item_folder_template_id,is_template")
  Dim thisItemFolder As Item = qry.apply() ' fetch this item from server
  
  If thisItemFolder.getProperty("is_template","0") = "1" Then
    ' set "Item Folder Template" Pemissions (Id) to permission of new ItemFolder
    Dim SQLstr As String = "UPDATE [Item_Folder] SET [Item_Folder].permission_id='E2227109B19B45E0B4690EEE5E890FBB' WHERE [Item_Folder].id='" & thisItemId & "'"
    thisItemFolder = Me.getInnovator().applySQL(SQLstr)
    If thisItemFolder.isError() Then Return thisItemFolder
    
    Return Me ' logic ends here
  End If

  ' if folder is not a template continue logic ...
  ' check if this folder already has sub folders, if yes exit (don't copy from folder)
  qry = Me.newItem("Item Sub Folder","get")
  qry.setProperty("source_id",thisItemId)
  qry.setAttribute("select","source_id(keyed_name),related_id(name,description,keyed_name)")
  qry.setAttribute("serverEvents","0")
  qry = qry.apply()
  If qry.getItemCount() > 0 Then Return Me

  ' get the folder template item
  Dim thisFolderTemplateId As String = thisItemFolder.getProperty("item_folder_template_id","")
  If thisFolderTemplateId = "" Then Return Me ' nothing to do
  
  qry = inn.newItem("Item Folder Template","get")
  qry.setID(thisFolderTemplateId)
  qry.setAttribute("select","name,item_number,state,top_item_folder_id,item_types_with_autonumbers")
  qry = qry.apply()
  If qry.isError() Then Return Me ' template not found, nothing to do

  ' get the templte top folder item
  ItemTypeWithAutoNumbers = qry.getProperty("item_types_with_autonumbers","") 
  Dim templateTopFolderId As String = qry.getProperty("top_item_folder_id","")
  If templateTopFolderId = "" Then Return Me ' nothing to do
  qry = inn.newItem("Item Folder","get")
  qry.setProperty("id",templateTopFolderId)
  qry.setProperty("is_template","1") ' make sure it's a template folder
  qry.setAttribute("select","name,description,item_number,is_template")
  qry = qry.apply()
  If qry.isError() Then Return Me ' template top folder not found, nothing to do
  
  ' merge properties to this top folder
  Dim propName As String = ""
  Dim propVal As String = ""
  
  propName = "description"
  propVal= qry.getProperty(propName,"")
  If propVal <> "" Then thisItemFolder.setProperty(propName,propVal)
  
  ' add logic for more custom properties to merge from template here...
  
  ' create sub folders for top level folder (from template structure)
  createSubFoldersFromTemplate (templateTopFolderId,thisItemId)
  
  Return Me
End Function  

'-----------------------------
Private Function createSubFoldersFromTemplate (templateFolderPartentId As String, newParentFolderId As String) As Item
  ' copy Folder Files (attachments) of this level from template
  res = addFolderFilesFromTemplateToThisItem (templateFolderPartentId,newParentFolderId)
  If res.isError() Then Return res

  ' copy controlled Items of this level from template
  res = addFolderControlledItemsFromTemplateToThisItem (templateFolderPartentId,newParentFolderId)
  If res.isError() Then Return res
  
  ' build structure from template
  Dim thisSubFolderRel As Item = Me.newItem("Item Sub Folder","get")
  thisSubFolderRel.setProperty("source_id",templateFolderPartentId)
  thisSubFolderRel.setAttribute("select","org_number,source_id(keyed_name),related_id(name,description,keyed_name)")
  thisSubFolderRel.setAttribute("serverEvents","0")
  thisSubFolderRel = thisSubFolderRel.apply()

  If thisSubFolderRel.getItemCount() = 0 Then Return Me 'nothing to do
  If thisSubFolderRel.isError() Then Return thisSubFolderRel

  Dim i As Integer
  For i=0 To thisSubFolderRel.getItemCount()-1
  	Dim templRelItem As Item = thisSubFolderRel.getItemByIndex(i)
    Dim templRelItemId As String = templRelItem.getProperty("related_id","")

    If  (templRelItemId <> "") Then
      Dim newRelatedItem As Item = inn.newItem("Item Folder","add")
      newRelatedItem.setProperty("name",templRelItem.getPropertyItem("related_id").getProperty("name",""))
      newRelatedItem.setProperty("description",templRelItem.getPropertyItem("related_id").getProperty("description",""))
      newRelatedItem.setProperty("is_root","")
      newRelatedItem = newRelatedItem.apply()
      If newRelatedItem.isError() Then Return newRelatedItem
      
     ' assume new parent folder already exists on server - then only new relationship needs to be added
      Dim newSubFolderRel As Item = inn.newItem("Item Sub Folder","add")
      newSubFolderRel.setProperty("org_number",templRelItem.getProperty("org_number",""))
      newSubFolderRel.setProperty("source_id",newParentFolderId)
      newSubFolderRel.setProperty("related_id",newRelatedItem.getID())
      newSubFolderRel = newSubFolderRel.apply()
      If newSubFolderRel.isError() Then Return newSubFolderRel

      ' recursion - create next level sub folders
      res = createSubFoldersFromTemplate (templRelItemId,newRelatedItem.GetID())
      If res.isError() Then Return res

    End If
  
  Next i
  Return Me
End Function

'-----------------------------
Private Function addFolderFilesFromTemplateToThisItem (templateFolderPartentId As String, newFolderId As String) As Item
  Dim FolderFileRels As Item = Me.newItem("Item Folder File","get")
  FolderFileRels.setProperty("source_id",templateFolderPartentId)
  FolderFileRels.setAttribute("select","is_template,template_action,sort_order,source_id(keyed_name),related_id(filename),is_shared")
  FolderFileRels.setAttribute("serverEvents","0")
  FolderFileRels = FolderFileRels.apply()

  If FolderFileRels.getItemCount() = 0 Then Return Me 'nothing to do
  If FolderFileRels.isError() Then Return FolderFileRels

  Dim i As Integer
  For i=0 To FolderFileRels.getItemCount()-1
  	Dim templRelItem As Item = FolderFileRels.getItemByIndex(i)
    Dim templRelItemId As String = templRelItem.getProperty("related_id","")

    If  (templRelItemId <> "") Then
     ' assume new folder already exists on server - then only new relationship needs to be added
      Dim newFolderFileRel As Item = inn.newItem("Item Folder File","add")
      newFolderFileRel.setProperty("sort_order",templRelItem.getProperty("sort_order",""))
      newFolderFileRel.setProperty("is_shared",templRelItem.getProperty("is_shared",""))
      newFolderFileRel.setProperty("source_id",newFolderId)
      newFolderFileRel.setProperty("related_id",templRelItemId)
      newFolderFileRel = newFolderFileRel.apply()
      If newFolderFileRel.isError() Then Return newFolderFileRel
    
    End If
  Next i
  Return Me
End Function

'-----------------------------
Private Function addFolderControlledItemsFromTemplateToThisItem (templateFolderPartentId As String, newFolderId As String) As Item
  'System.Diagnostics.Debugger.Break()
  Dim FolderCtrldItemRels As Item = Me.newItem("Item Folder Controlled Item","get")
  FolderCtrldItemRels.setProperty("source_id",templateFolderPartentId)
  FolderCtrldItemRels.setAttribute("select","is_template,template_action,source_id(keyed_name),related_id(filename)")
  FolderCtrldItemRels.setAttribute("serverEvents","0")
  FolderCtrldItemRels = FolderCtrldItemRels.apply()

  If FolderCtrldItemRels.getItemCount() = 0 Then Return Me 'nothing to do
  If FolderCtrldItemRels.isError() Then Return FolderCtrldItemRels

  Dim i As Integer
  For i=0 To FolderCtrldItemRels.getItemCount()-1
  	Dim templRelItem As Item = FolderCtrldItemRels.getItemByIndex(i)
    Dim templRelItemId As String = templRelItem.getProperty("related_id","")
    
    Dim templAction As String = templRelItem.getProperty("template_action","")
    Dim relItemId As String = ""
    Dim relItemType As String = ""
    
    'define new related Item accrding to template action
    Select Case (templAction)
      Case "Reference"
         relItemId = templRelItem.getProperty("related_id","")

      Case "New Item"
         relItemId = templRelItem.getProperty("related_id","")
         If relItemId <> "" Then
           relItemType = templRelItem.getPropertyItem("related_id").getAttribute("type","")
           
           Dim relItem As Item = inn.newItem(relItemType,"get")
           Dim fileRelshipItem As Item
           Dim fileRelshipName As String = ""
           Dim relItemPropertiesSelect As String = ""
           Dim fileRelPropertiesSelect As String = ""
           
           Select Case (relItemType)
             Case "Document"
               fileRelshipName = "Document File"
               fileRelPropertiesSelect = "sort_order,source_id,related_id(filename,file_type),is_shared"
               
               relItemPropertiesSelect = "item_number,name,description,classification"
               ' set item type specific conditions etc... here ...
            
             Case "Part"
               relItemPropertiesSelect = "item_number,name,description,classification"

               ' set item type specific conditions etc... here ...
               
             '--------------
             ' add more item type cases, if folder controlled (poly)item gets extended
             Case "add your item type case.."
               relItemPropertiesSelect = "name,description,classification"
               ' set item type specific conditions etc... here ...
             '--------------
            
           End Select 
           
           relItem.setID(relItemId)
           relItem.setAttribute("select",relItemPropertiesSelect)

           If fileRelshipName <> "" Then
             fileRelshipItem = inn.newItem(fileRelshipName,"get")
             fileRelshipItem.setAttribute("select",fileRelPropertiesSelect)
             relItem.addRelationship(fileRelshipItem)
           End If  
           
           relItem = relItem.apply()
           If relItem.isError() Then Return relItem
          
           ' create the new Item with same setting and relationships as in item context
           Dim newRelItem As Item = relItem.clone(False)
           newRelItem.setAction ("add")
           If relItemPropertiesSelect.indexOf("item_number") >= 0 Then
             newRelItem.setProperty("item_number",generateItemNumberForItemType(relItemType))
           End If
           newRelItem = newRelItem.apply()          
           If newRelItem.isError() Then Return newRelItem
           
           relItemId = newRelItem.GetID()
           
           ' clone the file relationships
           Dim fileRels As Item = relItem.getItemsByXPath("/*/*/Result/Item/Relationships/Item[@type='" & fileRelshipName & "']")
           Dim f As Integer
           For f=0 To fileRels.getItemCount() -1
           	 Dim newFileRel As Item = inn.newItem(fileRelshipName,"add")
             newFileRel.setProperty("sort_order",fileRels.getItemByIndex(f).getProperty("sort_order",""))
             newFileRel.setProperty("is_shared",fileRels.getItemByIndex(f).getProperty("is_shared",""))
             newFileRel.setProperty("source_id",relItemId) ' set to new RelItem
             newFileRel.setProperty("related_id",fileRels.getItemByIndex(f).getProperty("related_id",""))
             newFileRel = newFileRel.apply()
           Next f
         End If

    End Select
  
    If  (relItemId <> "") Then
     ' assume new folder already exists on server - then only new relationship needs to be added
      Dim newFolderCtrldItemRel As Item = inn.newItem("Item Folder Controlled Item","add")
      newFolderCtrldItemRel.setProperty("sort_order",templRelItem.getProperty("sort_order",""))
      newFolderCtrldItemRel.setProperty("template_action",templAction)
      newFolderCtrldItemRel.setProperty("source_id",newFolderId)
      newFolderCtrldItemRel.setProperty("related_id",relItemId)
      newFolderCtrldItemRel = newFolderCtrldItemRel.apply()
      If newFolderCtrldItemRel.isError() Then Return newFolderCtrldItemRel
    
    End If
  Next i
  Return Me
End Function

'-----------------------------
Private Function generateItemNumberForItemType (itemType As String) As String
   'detect, if given itemType has its own number seuquence
   'this assumed when it is listed in comma separated list 
   '  "ItemTypeWithAutoNumbers" defined on the "Item Folder TeEmplate"
   
   'if it is listed, then return "" (this lets the "add" action create the item_number)
   Dim listOfItemTypeWithAutoNumbers As String = "'" & ItemTypeWithAutoNumbers & "'"
   listOfItemTypeWithAutoNumbers = listOfItemTypeWithAutoNumbers.Replace(",","','")
   Dim qry As Item = inn.newItem("Value","get")
   qry.setProperty("value",listOfItemTypeWithAutoNumbers)
   qry.setPropertyAttribute("value","condition","in")
   qry = qry.apply()
   
   Dim i As Integer   
   For i=0 To  qry.getItemCount() -1
   	 If qry.getItemByIndex(i).getProperty("label","") = itemType Then Return ""
   Next i
   
   'if not listed use a default number sequence for this item type to create an item_number
   Dim numberSequenceName As String = "Default Document"
   Select Case (itemType)
     Case "Document"
       numberSequenceName = "Default Document"
     Case "Part" 
       numberSequenceName = "Default Part"
   End Select

   Return inn.getNextSequence(numberSequenceName)
      
End Function
]]></method_code>
  <method_type>VB</method_type>
  <name>Create Folder Struct from Templ</name>
 </Item>
</AML>