<AML>
 <Item type="Method" id="5941210D33BA409FB637511E86A48834" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA['MethodTemplateName=VBMain;
Dim inn As Innovator = Me.getInnovator()
Dim res As Item

' called onAfterAdd/Update of relationships to updated team_id and related_projects:
' and onAfterDelete to delete team_id if the same as on source item and update related projects.
'
Function Main() As Item
  'System.Diagnostics.Debugger.Break()
  Dim thisRelatedItemRel As Item = Me.newItem(Me.GetType(),"get")
  Dim action As String = Me.getAttribute("action","")
  Dim relItemId As String
  Dim relItemType As String
  Dim relItemAllowTeamChange As Boolean
  Dim relItemTeamId As String
  Dim relItemProjects As String
  Dim sepChr As String
  
 '==== AfterDelete
 If action = "delete" Then
  relItemId = Me.getAttribute("relatedItemId","")
  relItemType = Me.getAttribute("relatedItemType","")
  relItemTeamId = Me.getAttribute("relatedItemTeamId","")
  relItemAllowTeamChange = (Me.getAttribute("relatedItemAllowTeamChange","0") = "1")
  relItemProjects = Me.getAttribute("relatedItemRelatedProjects","")
  Dim srcItemProject As String = Me.getAttribute("folderRelatedProjectKN","")

  If (relItemId <> "" And srcItemProject <> "" And relItemProjects <> "") Then
    Dim projectList As String() = relItemProjects.split(",")
    Dim i As Integer
    relItemProjects = "" 'build comma separated list wo srcRelatedProject
    sepChr = ""
    Dim doAdd As Boolean = True
    For i=0 To projectList.Length-1
      If srcItemProject <> projectList(i) Then
        relItemProjects = relItemProjects & sepChr & projectList(i)
        sepChr = ","
      End If
    Next i
  End If
  if relItemProjects = "" then relItemProjects = "NULL"  'will clear the field on relatedItems
  
  If (relItemAllowTeamChange)
    'update related item - reset team, and update relatedProjects
    res = updateTeamIdOnItem(relItemType,relItemId,"NULL",relItemProjects)
  Else
    'update related item - ignore team, and update relatedProjects
    res = updateTeamIdOnItem(relItemType,relItemId,"",relItemProjects)
  End If
  If res.isError() Then Return res
  Return Me

 '==== AfterAdd/Update
 Else
  thisRelatedItemRel.setID(Me.getID())
  thisRelatedItemRel.setAttribute("select","team_id,source_id(team_id,config_id,name,related_project_keyed_name),related_id(team_id,config_id,keyed_name,allow_team_change_logic,related_projects)")
  thisRelatedItemRel.setAttribute("serverEvents","0")
  thisRelatedItemRel = thisRelatedItemRel.apply()

  If thisRelatedItemRel.isError() Then Return thisRelatedItemRel
  
  thisRelatedItemRel = thisRelatedItemRel.getItemByIndex(0) 'should only be one records anyways
  Dim parentFolderTeamId As String = thisRelatedItemRel.getPropertyItem("source_id").getProperty("team_id","")
  Dim relatedProjectKN As String = thisRelatedItemRel.getPropertyItem("source_id").getProperty("related_project_keyed_name","")
  Dim prevRelatedProjectKN As String = Me.getAttribute("prevRelatedProjectKN","")
  

  relItemId  = thisRelatedItemRel.getProperty("related_id","")
  If (relItemId <> "") Then
  	Dim relShipTeamId As String = thisRelatedItemRel.getProperty("team_id","")
    relItemAllowTeamChange = (thisRelatedItemRel.getPropertyItem("related_id").getProperty("allow_team_change_logic","0") = "1")
    relItemType = thisRelatedItemRel.getPropertyItem("related_id").getAttribute("type","")
    relItemTeamId = thisRelatedItemRel.getPropertyItem("related_id").getProperty("team_id","")
    relItemTeamId = relItemTeamId.Replace(" ","")
    relItemProjects = thisRelatedItemRel.getPropertyItem("related_id").getProperty("related_projects","")
    
    'build relItemProjects list
    If relatedProjectKN <> "" Then
      If relItemProjects <> "" Then
        Dim projectList As String() = relItemProjects.split(",")
        Dim i As Integer
        relItemProjects = "" 'build comma separated list again
        sepChr = ""
        For i=0 To projectList.Length-1
		   ' skip previous project KN, if listed
		   if projectList(i) <> prevRelatedProjectKN And projectList(i) <> relatedProjectKN then
				relItemProjects = relItemProjects & sepChr & projectList(i)
				sepChr = ","
		   end if
        Next i
		' add new project KN, if not listed already
		relItemProjects = relItemProjects & sepChr & relatedProjectKN
      Else
        relItemProjects = relatedProjectKN
      End If
	  if relItemProjects = "" then relItemProjects = "NULL"  'will clear the field on relatedItems

    Else
      relItemProjects = ""
    End If

    ' also set team id on the relionship item (since this is not controlled by 'SrcAcess' core logic
    If parentFolderTeamId <> relShipTeamId Then
      res = updateTeamIdOnItem(Me.GetType(),Me.getID(),parentFolderTeamId,"")
      If res.isError() Then Return res
    End If
    ' set team id on the related item, if not set already
    If relItemAllowTeamChange And parentFolderTeamId <> relItemTeamId And relItemTeamId = "" Then
      res = updateTeamIdOnItem(relItemType,relItemId,parentFolderTeamId,relItemProjects)
      If res.isError() Then Return res
    Else
      ' set related project on related item only
      If relItemProjects <> "" Then
      res = updateTeamIdOnItem(relItemType,relItemId,"",relItemProjects)
      If res.isError() Then Return res
      End If
    End If

  End If

 End If
 Return Me
 
End Function  

'-----------------------------
Private Function updateTeamIdOnItem (relItemType As String, relItemId As String, newTeamId As String, relItemProjects As String) As Item
  Dim typeTable As String = relItemType.Replace(" " ,"_")
  
  'link teamId to project space
  If newTeamId <> "" Or relItemProjects <> "" Then  
    Dim setSep As String = "SET"
    Dim SQLstr As String = "UPDATE [" & typeTable & "] "
    If newTeamId <> "" Then
      If newTeamId <> "NULL" Then newTeamId = "'" & newTeamId & "'"
      SQLstr = SQLstr & setSep & " [" & typeTable & "].team_id=" & newTeamId
      setSep = ","
    End If
    If relItemProjects <> "" Then
      If relItemProjects.Length > 200 Then relItemProjects = relItemProjects.Substring(0,200)
      If relItemProjects <> "NULL" Then relItemProjects = "'" & relItemProjects & "'"
      SQLstr = SQLstr & setSep & " [" & typeTable & "].related_projects=" & relItemProjects
    End If
    SQLstr = SQLstr & " WHERE [" & typeTable & "].id='" & relItemId & "'"
    res = inn.applySQL(SQLstr)
    Return res
  End If
  Return Me
End Function
]]></method_code>
  <method_type>VB</method_type>
  <name>Copy FolderTeam to RelatedItems</name>
 </Item>
</AML>