<AML>
 <Item type="Method" id="5941210D33BA409FB637511E86A48834" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[Innovator inn = this.getInnovator();
Item res;

// called onAfterAdd/Update of relationships to update team_id and related_projects:
// and onAfterDelete to delete team_id, if the same as on source item and update related projects.

  // System.Diagnostics.Debugger.Break();
  Item thisRelatedItemRel = this.newItem(this.getType(),"get");
  string action = this.getAttribute("action","");
  string relItemId;
  string relItemType;
  bool relItemAllowTeamChange;
  string relItemTeamId;
  string relItemProjects;
  string sepChr;
  
	//==== AfterDelete
	if (action == "delete") {
		relItemId = this.getAttribute("relatedItemId","");
		if (relItemId == "") {return this; } // cannot process data on related item 
		relItemType = this.getAttribute("relatedItemType","");
		relItemTeamId = this.getAttribute("relatedItemTeamId","");
		relItemAllowTeamChange = (this.getAttribute("relatedItemAllowTeamChange","0") == "1");
		relItemProjects = this.getAttribute("relatedItemRelatedProjects","");
		string srcItemProject = this.getAttribute("folderRelatedProjectKN","");

		if (relItemId != "" && srcItemProject != "" && relItemProjects != "") {
			string[] projectList = relItemProjects.Split(',');
		
			relItemProjects = ""; // build comma separated list wo srcRelatedProject
			sepChr = "";
			for (int i=0; i<projectList.Length && projectList[0] != ""; i++) {
				if (srcItemProject != projectList[i]) {
					relItemProjects += sepChr + projectList[i];
					sepChr = ",";
				}
			}
		}
		if (relItemProjects == "") {relItemProjects = "NULL";} // will clear the field on relatedItems
	  
		if (relItemAllowTeamChange) {
			//update related item - reset team, and update relatedProjects
			res = updateTeamIdOnItem(relItemType,relItemId,"NULL",relItemProjects);
		}
		else {
			// update related item - ignore team, and update relatedProjects
			res = updateTeamIdOnItem(relItemType,relItemId,"",relItemProjects);
		}
		if (res.isError()) {return res;}
		
		return this;
	
	//==== AfterAdd/Update
	}
	else {
		thisRelatedItemRel.setID(this.getID());
		thisRelatedItemRel.setAttribute("select","team_id,source_id(team_id,config_id,name,related_project_keyed_name),related_id(team_id,config_id,keyed_name,allow_team_change_logic,related_projects)");
		thisRelatedItemRel.setAttribute("serverEvents","0");
		thisRelatedItemRel = thisRelatedItemRel.apply();

		if (thisRelatedItemRel.isError()) {return thisRelatedItemRel;}
	  
		thisRelatedItemRel = thisRelatedItemRel.getItemByIndex(0);  // should only be one records anyways
		string parentFolderTeamId = thisRelatedItemRel.getPropertyItem("source_id").getProperty("team_id","");
		string relatedProjectKN = thisRelatedItemRel.getPropertyItem("source_id").getProperty("related_project_keyed_name","");
		string prevRelatedProjectKN = this.getAttribute("prevRelatedProjectKN","");

		relItemId  = thisRelatedItemRel.getProperty("related_id","");
		if (relItemId != "") {
			string relShipTeamId = thisRelatedItemRel.getProperty("team_id","");
			relItemAllowTeamChange = (thisRelatedItemRel.getPropertyItem("related_id").getProperty("allow_team_change_logic","0") == "1");
			relItemType = thisRelatedItemRel.getPropertyItem("related_id").getAttribute("type","");
			relItemTeamId = thisRelatedItemRel.getPropertyItem("related_id").getProperty("team_id","");
			relItemTeamId = relItemTeamId.Replace(" ","");
			relItemProjects = thisRelatedItemRel.getPropertyItem("related_id").getProperty("related_projects","");
		
			// build relItemProjects list
			if (relatedProjectKN != "") {
				if (relItemProjects != "") {
					string[] projectList = relItemProjects.Split(',');

					relItemProjects = ""; // build comma separated list again
					sepChr = "";
					for (int i=0; i<projectList.Length; i++) {
						// skip previous project KN, if listed
						if (projectList[i] != prevRelatedProjectKN && projectList[i] != relatedProjectKN) {
							relItemProjects += sepChr + projectList[i];
							sepChr = ",";
						}
					}
					// add new project KN, if not listed already
					relItemProjects += sepChr + relatedProjectKN;
				} 
				else {
					relItemProjects = relatedProjectKN;
				}
				if (relItemProjects == "") {relItemProjects = "NULL";} // will clear the field on relatedItems
			} 
			else {
				relItemProjects = "";
			}

			// also set team id on the relionship item (since this is not controlled by 'SrcAcess' core logic
			if (parentFolderTeamId != relShipTeamId) {
				res = updateTeamIdOnItem(this.getType(), this.getID(), parentFolderTeamId, "");
				if (res.isError()) {return res;}
			}
		
			// set team id on the related item, if not set already
			if (relItemAllowTeamChange && parentFolderTeamId != relItemTeamId && relItemTeamId == "") {
				res = updateTeamIdOnItem(relItemType,relItemId,parentFolderTeamId,relItemProjects);
				if (res.isError()) {return res;}
			} 
			else {
				// set related project on related item only
				if (relItemProjects != "") {
					res = updateTeamIdOnItem(relItemType,relItemId,"",relItemProjects);
					if (res.isError()) {return res;}
				}
			}

		}
	}
	return this;
 
}
// end of Main 

// -----------------------------
Item updateTeamIdOnItem (string relItemType, string relItemId, string newTeamId, string relItemProjects) {
  string typeTable = relItemType.Replace(" " ,"_");
  
  // link teamId to project space
  if (newTeamId != "" || relItemProjects != "") {  
    string setSep = "SET";
    string SQLstr = "UPDATE [" + typeTable + "] ";
    if (newTeamId != "") {
      if (newTeamId != "NULL") {newTeamId = "'" + newTeamId + "'";}
      SQLstr += setSep + " [" + typeTable + "].team_id=" + newTeamId;
      setSep = ",";
    }
    if (relItemProjects != "") {
      if (relItemProjects.Length > 200) {relItemProjects = relItemProjects.Substring(0,200);}
      if (relItemProjects != "NULL") {relItemProjects = "'" + relItemProjects + "'";}
      SQLstr += setSep + " [" + typeTable + "].related_projects=" + relItemProjects;
    }
    SQLstr += " WHERE [" + typeTable + "].id='" + relItemId + "'";
    Item res = this.getInnovator().applySQL(SQLstr);
    return res;
  }
  return this;
}

void endOfMethod () {]]></method_code>
  <method_type>C#</method_type>
  <name>Copy cFolderTeam to RelatedItems</name>
 </Item>
</AML>