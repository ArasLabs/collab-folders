<AML>
 <Item type="Method" id="1DA3E118D7BC41EC9A8AC6CE8F705D10" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// called onAfterAdd/Update of realtionships:
//

  //System.Diagnostics.Debugger.Break();
  Item thisSubFolderRel = this.newItem(this.getType(),"get");
  thisSubFolderRel.setID(this.getID());
  thisSubFolderRel.setAttribute("select","team_id,source_id(team_id,config_id,name,related_project_keyed_name),related_id(team_id,config_id,name,related_project_keyed_name,keyed_name,allow_team_change_logic)");
  thisSubFolderRel.setAttribute("serverEvents","0");
  thisSubFolderRel = thisSubFolderRel.apply();

  if (thisSubFolderRel.isError()) {return thisSubFolderRel;}

  thisSubFolderRel = thisSubFolderRel.getItemByIndex(0); //should only be one records anyways
  string parentFolderTeamId = thisSubFolderRel.getPropertyItem("source_id").getProperty("team_id","");
  string relatedProjectKN = thisSubFolderRel.getPropertyItem("source_id").getProperty("related_project_keyed_name","");

  string relItemId = thisSubFolderRel.getProperty("related_id","");
  string relShipTeamId = "";
  if  (relItemId != "") {
  	relShipTeamId = thisSubFolderRel.getProperty("team_id","");
    string relItemTeamId = thisSubFolderRel.getPropertyItem("related_id").getProperty("team_id","empty");
    string relItemType = thisSubFolderRel.getPropertyItem("related_id").getAttribute("type","");
    bool relItemAllowTeamChange = (thisSubFolderRel.getPropertyItem("related_id").getProperty("allow_team_change_logic","0") == "1");

    if (relItemAllowTeamChange && parentFolderTeamId != relItemTeamId) {}

 	
    // also set team id on the relionship item (since this is not controlled by 'SrcAcess' core logic
 	Item res;
    if (parentFolderTeamId != relShipTeamId) {
      res = updateTeamIdOnItem(this.getType(),this.getID(),parentFolderTeamId,"");
      if (res.isError()) {return res;}
   }
   // set team id on the related item
    if (relItemAllowTeamChange && parentFolderTeamId != relItemTeamId) {
      res = updateTeamIdOnItem(relItemType,relItemId,parentFolderTeamId,relatedProjectKN);
      if (res.isError()) {return res;}
    } 
	else {
      // set related project on related item only
      if (relatedProjectKN != "") {
		res = updateTeamIdOnItem(relItemType,relItemId,"",relatedProjectKN);
		if (res.isError()) {return res;}
	  }
    }
  }

  return this;
}  

// -----------------------------
Item updateTeamIdOnItem (string relItemType, string relItemId, string newTeamId, string relatedProjectKN) {
  string typeTable = relItemType.Replace(" " ,"_");
  
  // link teamId to project space
  if (newTeamId != "" || relatedProjectKN != "") {  
    string setSep = "SET";
    string SQLstr = "UPDATE [" + typeTable + "] ";
    if (newTeamId != "") {
      SQLstr = SQLstr + setSep + " [" + typeTable + "].team_id='" + newTeamId + "'";
      setSep = ",";
   }
    if (relatedProjectKN != "") {
      relatedProjectKN = relatedProjectKN.Replace("'","''");  // need to escape single quotes
      SQLstr = SQLstr + setSep + " [" + typeTable + "].related_project_keyed_name='" + relatedProjectKN + "'";
   }
    
    SQLstr = SQLstr + " WHERE [" + typeTable + "].id='" + relItemId + "'";
    Item res = this.getInnovator().applySQL(SQLstr);
    return res;
 }
  return this;
}

void endOfMethod () {
]]></method_code>
  <method_type>C#</method_type>
  <name>Copy cFolderTeam to SubFolders</name>
 </Item>
</AML>