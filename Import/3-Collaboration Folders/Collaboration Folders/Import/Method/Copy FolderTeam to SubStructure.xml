<AML>
 <Item type="Method" id="6B9B49B64E6B488CAE4C30ED1F91CA10" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[//
// called on ItemType: Folder Item, Server Events: onAfterUpdate
// and from server side method "Synch Item TeamId to TopcFolder"
//
// on every update of a Folder item its entire structure of sub folder will inherit
// this folder's team_id and the related_project_keyed_name
//
// If you do not want this type of inheritance, you can also call this method from an action
// to trigger this a manually.
//

	//System.Diagnostics.Debugger.Break();
	string thisItemType = this.getType();
	string thisItemId = this.getID();

	string parentFolderPrevRelatedProjectKN;
	if (!RequestState.Contains("prevRelatedProjectKN")) {
		parentFolderPrevRelatedProjectKN = "";
	} 
	else {
		parentFolderPrevRelatedProjectKN = (string) RequestState["prevRelatedProjectKN"];
	}  
	
	Item res = copyTeamIdToSubFolders (thisItemType,thisItemId, parentFolderPrevRelatedProjectKN);
	if (res.isError()) {return res;}

	if (RequestState.Contains("prevRelatedProjectKN")) {RequestState.Remove("prevRelatedProjectKN");}

	return this;
} 

//-----------------------------
Item copyTeamIdToSubFolders (string folderType, string parentFolderId, string parentFolderPrevRelatedProjectKN) {
	string parentFolderTeamId = this.getProperty("team_id","");
	string  parentFolderOwnerId = this.getProperty("owned_by_id","");
	string parentFolderManagerId = this.getProperty("managed_by_id","");
	string parentFolderRelatedProjectKN = this.getProperty("related_project_keyed_name","");

	if (parentFolderRelatedProjectKN == parentFolderPrevRelatedProjectKN) {parentFolderPrevRelatedProjectKN = "";}

	Item thisSubFolderRel = this.newItem("Sub cFolder","get");
	thisSubFolderRel.setProperty("source_id",parentFolderId);
	thisSubFolderRel.setAttribute("select","team_id,source_id(team_id,config_id,name,related_project_keyed_name),related_id(team_id,owned_by_id,managed_by_id,name,related_project_keyed_name,config_id,keyed_name,allow_team_change_logic)");
	thisSubFolderRel.setAttribute("serverEvents","0");
	thisSubFolderRel = thisSubFolderRel.apply();

	//copy team and projectKN to folder controlled Items  
	Item res = copyTeamIdToFolderControlledItems(parentFolderId, parentFolderPrevRelatedProjectKN);
	if (res.isError()) {return res;}

	for (int i=0;i<thisSubFolderRel.getItemCount(); i++) {
		Item thisRelItem = thisSubFolderRel.getItemByIndex(i);
		string relItemId = thisRelItem.getProperty("related_id","");
		string relShipTeamId = thisRelItem.getProperty("team_id","");

		if  (relItemId != "") {
			string relItemTeamId = thisRelItem.getPropertyItem("related_id").getProperty("team_id","");
			string relItemOwnerId = thisRelItem.getPropertyItem("related_id").getProperty("owned_by_id","");
			string relItemManagerId = thisRelItem.getPropertyItem("related_id").getProperty("managed_by_id","");
			string relItemType = thisRelItem.getPropertyItem("related_id").getAttribute("type","");
			bool relItemAllowTeamChange = (thisRelItem.getPropertyItem("related_id").getProperty("allow_team_change_logic","0") == "1");
			string relItemRelatedProjectKN = thisRelItem.getPropertyItem("related_id").getProperty("related_project_keyed_name","");

			 
			bool updateRelShipItem = false;
			if (parentFolderTeamId != relItemTeamId) {updateRelShipItem = true;}
			if (parentFolderOwnerId != relItemOwnerId) {updateRelShipItem = true;}
			if (parentFolderManagerId != relItemManagerId) {updateRelShipItem = true;}
			  
			if (updateRelShipItem) {
				res = updateTeamOwnerAndMangerOnRelItem(relItemType,relItemId,parentFolderTeamId,parentFolderOwnerId,parentFolderManagerId);
				if (res.isError()) {return res;}
			}

			// set team id on the sub item
			if (relItemAllowTeamChange && parentFolderTeamId != relItemTeamId) {
				res = updateTeamIdOnItem(relItemType,relItemId,parentFolderTeamId,parentFolderRelatedProjectKN);
				if (res.isError()) {return res;}
			}
			else {
				if (parentFolderRelatedProjectKN != "" && parentFolderRelatedProjectKN != relItemRelatedProjectKN) {
				  res = updateTeamIdOnItem(relItemType,relItemId,"",parentFolderRelatedProjectKN);
				if (res.isError()) {return res;}
				} 
			}

			// recursion
			res = copyTeamIdToSubFolders (folderType, relItemId, parentFolderPrevRelatedProjectKN);
			if (res.isError()) {return res;}
		}

	}
	return this;
}  

// -----------------------------
Item updateTeamOwnerAndMangerOnRelItem (string relItemType, string relItemId, string newTeamId, string newOwnerId, string newManagerId) {
	string typeTable = relItemType.Replace(" " ,"_");
	string setSep = "SET";
	string SQLstr = "UPDATE [" + typeTable + "]";

	if (newTeamId != "") {  
		SQLstr = SQLstr + setSep + " [" + typeTable + "].team_id='" + newTeamId + "'";
		setSep = ",";
	}

	if (newOwnerId != "") {  
		SQLstr = SQLstr + setSep + " [" + typeTable + "].owned_by_id='" + newOwnerId + "'";
		setSep = ",";
	}

	if (newManagerId != "") {  
		SQLstr = SQLstr + setSep + " [" + typeTable + "].managed_by_id='" + newManagerId + "'";
		setSep = ",";
	}

	SQLstr = SQLstr + " WHERE [" + typeTable + "].id='" + relItemId + "'";
	Item res = this.getInnovator().applySQL(SQLstr);
	return res;
} 

// -----------------------------
Item updateTeamIdOnItem (string relItemType, string relItemId, string newTeamId, string relatedProjectKN) {
	string typeTable = relItemType.Replace(" " ,"_");

	//ink teamId to project space
	if (newTeamId != "" || relatedProjectKN != "") {  
		string setSep = "SET";
		string SQLstr = "UPDATE [" + typeTable + "]";

		if (newTeamId != "") {
			SQLstr = SQLstr + setSep + " [" + typeTable + "].team_id='" + newTeamId + "'";
			setSep = ",";
		}
		if (relatedProjectKN != "") {
		    relatedProjectKN = relatedProjectKN.Replace("'","''");  // need to escape single quotes
			SQLstr = SQLstr + setSep + " [" + typeTable + "].related_project_keyed_name='" + relatedProjectKN + "'" ;
		}

		SQLstr = SQLstr + " WHERE [" + typeTable + "].id='" + relItemId + "'";
		Item res = this.getInnovator().applySQL(SQLstr);
		return res;
	}
	return this;
}

// ----------------------------
Item copyTeamIdToFolderControlledItems (string folderId, string prevRelatedProjectKN) {
	Item folderControlledItems = this.newItem("cFolder Controlled Item","get");
	folderControlledItems.setProperty("source_id",folderId);
	folderControlledItems.setAttribute("select","id");
	folderControlledItems.setAttribute("serverEvents","0");
	folderControlledItems = folderControlledItems.apply();

	for (int i=0; i<folderControlledItems.getItemCount(); i++) {
		Item folderControlledItem = folderControlledItems.getItemByIndex(i);
		folderControlledItem.setAttribute("prevRelatedProjectKN",prevRelatedProjectKN);
		Item res = folderControlledItem.apply("Copy cFolderTeam to RelatedItems"); // on every relationship item found
		if (res.isError()) {return res;}
	}
	return this;
}


void endOfMethod () {]]></method_code>
  <method_type>C#</method_type>
  <name>Copy cFolderTeam to SubStructure</name>
 </Item>
</AML>