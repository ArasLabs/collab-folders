<AML>
 <Item type="Method" id="C7EB19DADE104E59BD67CD234BD8B090" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[itemLinkProperty = "team_id";

var element = document.getElementById("arasRelease"); 
var formArasRelease = "";
if (element) {formArasRelease = element.innerHTML;}

//=== check if new team logic is needed
var hideNewTeamLinkAndReturn = false;

if (! document.isEditMode) {hideNewTeamLinkAndReturn = true;}

var propVal = top.aras.getItemProperty(document.thisItem.node, "is_template","");
// if template, no teams are allowed
if (propVal === "1") {hideNewTeamLinkAndReturn = true;}

propVal = top.aras.getItemProperty(document.thisItem.node, itemLinkProperty,"");
// if team_id has value, no new teams are allowed
if (propVal !== "") {hideNewTeamLinkAndReturn = true;}

if (hideNewTeamLinkAndReturn)
{
  hideCreateNewAction("createNewItemHref",true);
  return;
}

//=== apply new team logic
hideCreateNewAction("createNewItemHref",false);

//=== create new callback  
window.createNewItemAndLinkToProperty = function(){

    var folderName = fn_GetValueOfFieldByName("name");
	
	if (!folderName || folderName === undefined || folderName === "")
	{
	  alert("Cannot create new Item. Field 'name' on this form does not have a value !");
	  return;
	}
    LinkNewTeamToFolder(folderName);
  };

// API function called from HTML field on form
LinkNewTeamToFolder = function(folderName){
  var tmpItm = document.item;
  var aml = tmpItm.xml;
  var thisItem = top.aras.newIOMItem("","");  // holds the cFolder context
  thisItem.loadAML(aml);

  var thisFolderConfigId = thisItem.getProperty("config_id","");
  var thisFolderNumber = thisItem.getProperty("item_number","");
  if (thisFolderConfigId === "") {thisFolderConfigId=thisItem.getID();}
  
  if (thisFolderConfigId === "") {
    alert ("Cannot determine 'configId', of this cFolder!");
    return;
  }

  var teamSystemId = createItemFolderTeamItem (thisFolderConfigId, thisFolderNumber, "name:"+folderName);
  if (teamSystemId.indexOf("ERROR") >= 0) {
    alert (teamSystemId);
    return;
  }

  handleItemChange(itemLinkProperty,teamSystemId);
  thisItem.setProperty(itemLinkProperty,teamSystemId);
  hideCreateNewAction("createNewItemHref",true);
  return;
};

// ----Helper Functions --
//---------------
function createItemFolderTeamItem (folderItemConfigId,folderItemNumber,presetProperties)
{
  var presetProperty = "";
  var presetValue = "";
  if (presetProperties !== "") {
    var pos1;
	pos1 = presetProperties.indexOf(":");
	if (pos1 > 0) {
	  presetValue = presetProperties.substring(pos1+1,presetProperties.length);
	  presetProperty = presetProperties.substring(0,pos1);
	}
  }

  //try to find existing team item of this Folder
  var amlCmd = top.aras.newIOMItem("Team","get");
  amlCmd.setProperty("private_team_item_id_string", folderItemConfigId);
  amlCmd.setAttribute("select","id");
  amlCmd = amlCmd.apply();

  var teamName = "FT_" + presetValue + " (" +folderItemNumber + ")";
  var teamId = "";
  if (amlCmd.getItemCount() <= 0) {
    //create new team for this Folder
    amlCmd = top.aras.newIOMItem("Team","cFolder CreateNew Team");
    amlCmd.setProperty(presetProperty,teamName);
    amlCmd.setProperty("private_team_item_id_string", folderItemConfigId);
    amlCmd = amlCmd.apply();
    if (amlCmd.isError()) {return "ERROR:" + amlCmd.getErrorString();}
  }
  teamId = amlCmd.getItemByIndex(0).getAttribute("id","");

  return teamId; 
}

//-------
function hideCreateNewAction (hrefHTMLName, bHide) {
  var element = document.getElementsByName(hrefHTMLName)[0];
  if (element) {
    var style = element.style;
    if (style) {
      if (bHide) {style.display = "none";}
      else {style.display = "block";        
      }
    }
  }
  return;
}

// -------
function fn_GetValueOfFieldByName (propName) {
	  if (formArasRelease === "Aras9") {return document.getElementsByName(propName)[0].value;}
	  else {
		var instance= top.aras.Browser.isIe() ? top.instance : top.instance.contentWindow;
		return instance.getFieldByName(propName).getElementsByTagName("input")[0].value;
		}
	return "";
}
]]></method_code>
  <method_type>JavaScript</method_type>
  <name>Handle newTeam on Folder Form</name>
 </Item>
</AML>